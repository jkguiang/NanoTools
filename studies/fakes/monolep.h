#ifndef MONOLEP_H
#define MONOLEP_H

enum MonolepID {
    no_lepton = -1,
    single_el = 0,
    single_mu = 1
};

class MonolepTree {

    /**
     * TTree automatically generated by mktree
     */
    
    /* Initialize branches */
    // Event kinematics
    TBranch* b_event;
    TBranch* b_ht;
    TBranch* b_met;
    // DeepAlgo btags
    TBranch* b_deepCSV_btags_loose;
    TBranch* b_deepCSV_btags_medium;
    TBranch* b_deepCSV_btags_tight;
    TBranch* b_deepJet_btags_loose;
    TBranch* b_deepJet_btags_medium;
    TBranch* b_deepJet_btags_tight;
    // Real lepton
    TBranch* b_lepton_id;
    TBranch* b_lepton_pt;
    TBranch* b_lepton_pt_corr;
    TBranch* b_lepton_eta;
    TBranch* b_lepton_phi;
    // Fake lepton
    TBranch* b_fake_id;
    TBranch* b_fake_pt;
    TBranch* b_fake_pt_corr;
    TBranch* b_fake_eta;
    TBranch* b_fake_phi;
    TBranch* b_fake_unmatched;
    TBranch* b_fake_from_b;
    TBranch* b_fake_from_c;
    TBranch* b_fake_from_light;

    public:

        // TTree
        TTree *t;

        /* Initialize branch values */
        // Event kinematics
        int event;
        float ht;
        float met;
        // DeepAlgo btags
        int deepCSV_btags_loose;
        int deepCSV_btags_medium;
        int deepCSV_btags_tight;
        int deepJet_btags_loose;
        int deepJet_btags_medium;
        int deepJet_btags_tight;
        // Real lepton
        int lepton_id;
        float lepton_pt;
        float lepton_pt_corr;
        float lepton_eta;
        float lepton_phi;
        // Fake lepton
        int fake_id;
        float fake_pt;
        float fake_pt_corr;
        float fake_eta;
        float fake_phi;
        bool fake_unmatched;
        bool fake_from_b;
        bool fake_from_c;
        bool fake_from_light;

        /* Methods */
        // Constructor
        MonolepTree();
        // Reset variables
        void reset();
        // Fillers
        bool passesNonIsoTrigger(int lepton_pdg_id, int lepton_index);
        int fillEvtBranches();
        int fillLepBranches();
        // Other
        void saveLepton(int lepton_pdf_id, int lepton_index, bool is_prompt);
        MonolepID whichGenMonolep();
};

#endif
    
